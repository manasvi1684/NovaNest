name: NovaNest CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend CI/CD
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install Frontend Dependencies
      run: |
        cd client
        npm ci
    
    - name: Run Frontend Linting
      run: |
        cd client
        npm run lint
    
    - name: Run Frontend Tests
      run: |
        cd client
        npm test -- --coverage --watchAll=false
    
    - name: Build Frontend
      run: |
        cd client
        npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
    
    - name: Deploy to Vercel
      if: github.ref == 'refs/heads/main'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./client

  # Backend CI/CD
  backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install Backend Dependencies
      run: |
        cd server
        npm ci
    
    - name: Run Backend Linting
      run: |
        cd server
        npm run lint
    
    - name: Run Backend Tests
      run: |
        cd server
        npm test -- --coverage --watchAll=false
    
    - name: Deploy to Render
      if: github.ref == 'refs/heads/main'
      env:
        RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_TOKEN" \
          -H "Content-Type: application/json"

  # E2E Tests
  e2e:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install Dependencies
      run: |
        cd client
        npm ci
    
    - name: Run E2E Tests
      run: |
        cd client
        npm run test:e2e
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }} 